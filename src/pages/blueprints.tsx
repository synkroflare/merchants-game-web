import { IconBox, IconCalendar, IconCoin, IconX } from "@tabler/icons-react";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useContext } from "react";
import { blueprints } from "~/constants/blueprints";
import { AppContext } from "~/context";
import { type TBlueprint } from "~/types";

const Home: NextPage = () => {
  const { data } = useContext(AppContext);
  const handleBlueprintDelete = (bp: TBlueprint) => {
    alert("deleting: " + bp.name);
  };
  return (
    <>
      <Head>
        <title>Merchants </title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]"
        style={{
          backgroundImage: "url('/images/merchants-bg.jpg')",
          backgroundSize: "cover",
        }}
      >
        <div className="flex h-full w-full  grow  flex-col items-center justify-start bg-black/30 p-6 backdrop-blur-[1px]">
          <div className=" flex flex-col items-center justify-center">
            <div className="text-shadow-3 font-[sign45] text-7xl font-bold tracking-tighter text-white">
              MERCHANTS
            </div>
            <div className="mt-[-7px] text-sm font-semibold text-white">
              Board Game by Yuri Garcia
            </div>
          </div>

          <div className="my-auto grid grid-cols-1 gap-4 overflow-auto p-2 pb-12">
            {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((index) => {
              const bp = blueprints[index];
              if (bp) {
                {
                  return (
                    <div
                      className="game-blueprint relative flex flex-col items-center gap-2 rounded-md bg-gray-800 p-4 font-[sign45] text-white "
                      key={index}
                    >
                      {data.permission === "admin" && (
                        <div
                          className="absolute right-0 top-0 rounded-tr-md bg-red-500 p-2 text-white"
                          onClick={() => handleBlueprintDelete(bp)}
                        >
                          <IconX />
                        </div>
                      )}
                      <div className="grid grid-cols-2  ">
                        <Image
                          src={bp.imageUrl}
                          width={250}
                          height={250}
                          alt={bp.name}
                          className="rounded-md"
                        />
                        <div className="flex flex-col gap-4">
                          <div className="w-full text-center text-xl">
                            {bp.name}
                          </div>
                          <div className="grid grid-cols-2 gap-4">
                            <div className="flex flex-row items-center justify-center gap-2">
                              <IconCoin size={30} />
                              <span>{bp.reward}</span>
                            </div>
                            <div className="flex flex-row items-center justify-center gap-2">
                              <IconBox size={30} />
                              <span>{bp.ingredientCount}</span>
                            </div>
                            <div className="flex flex-row items-center justify-center gap-2">
                              <IconCalendar size={30} />
                              <span>{bp.deliveryTime}</span>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div className="flex w-full flex-col">
                        <div className="text-xl">Descrição</div>
                        <span className="text-sm">{bp.description}</span>
                      </div>
                      <div className="flex w-full flex-col">
                        <div
                          className="ml-auto rounded-md bg-indigo-600 px-5 py-1 text-white"
                          onClick={() => alert(bp.tips)}
                        >
                          Ver Dicas
                        </div>
                      </div>
                    </div>
                  );
                }
              }
              if (data.permission === "admin") {
                return (
                  <div
                    className="game-blueprint relative flex flex-col items-center gap-2 rounded-md bg-gray-800 p-4 font-[sign45] text-white "
                    key={index}
                  >
                    add
                  </div>
                );
              }
            })}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
